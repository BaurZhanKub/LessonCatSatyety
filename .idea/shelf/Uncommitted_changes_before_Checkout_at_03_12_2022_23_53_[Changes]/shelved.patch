Index: src/LessenStart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class LessenStart {\r\n    static Scanner sn = new Scanner(System.in);\r\n    static Random rn = new Random();\r\n    static int satyety = catSatyety(10,100);\r\n    static int desiredSatiety = catSatyety(10,200);\r\n    public static void main(String[] args) {\r\n        printFood();\r\n        printDesiredSatiety();\r\n        while (satyety<desiredSatiety){\r\n            if (satyety== desiredSatiety){\r\n                System.out.println(\"Кот сыт \");\r\n                break;\r\n            }\r\n            printSatiety();\r\n            Food food = getFood();\r\n            changeSatyety(food.getFoodValue());\r\n            printDesiredSatiety();\r\n        }\r\n        System.out.println(\"Выш кот перекормлен\");\r\n        printSatiety();\r\n    }\r\n     public static Food getFood(){\r\n         System.out.println(\"Введите название еды из списка\");\r\n         String input = sn.nextLine().toUpperCase();\r\n         for (Food food : Food.values()) {\r\n             if(food.name().equals(input)){\r\n                 return food;\r\n             }\r\n         }\r\n         System.out.println(\"Вы ввели неверные данные!\");\r\n         return getFood();\r\n     }\r\n     public static void printFood(){\r\n         for (Food food : Food.values()) {\r\n             System.out.printf(\"%s %s, \",food.name(),food.getFoodValue());\r\n         }\r\n         System.out.println();\r\n     }\r\n     public static int catSatyety(int min, int max){\r\n         max -= min;\r\n         return (int) (Math.random() * ++max) + min;\r\n     }\r\n     public static void changeSatyety (int foodSatyety){\r\n        satyety = satyety + foodSatyety;\r\n     }\r\n     public static void printSatiety(){\r\n         System.out.println(\"Уровень сытости \" + satyety);\r\n     }\r\n    public static void printDesiredSatiety() {\r\n        System.out.println(\"Желаемый уровень сытости \" + desiredSatiety);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/LessenStart.java b/src/LessenStart.java
--- a/src/LessenStart.java	
+++ b/src/LessenStart.java	
@@ -9,28 +9,27 @@
     public static void main(String[] args) {
         printFood();
         printDesiredSatiety();
+        printSatiety();
+        CatState state = feedCat();
+        printCatStete(state);
+    }
+    public static CatState feedCat(){
+        if(satyety>desiredSatiety){
+            return CatState.OBESE;
+        }
         while (satyety<desiredSatiety){
-            if (satyety== desiredSatiety){
-                System.out.println("Кот сыт ");
-                break;
-            }
-            printSatiety();
             Food food = getFood();
             changeSatyety(food.getFoodValue());
-            printDesiredSatiety();
-        }
-        System.out.println("Выш кот перекормлен");
-        printSatiety();
+            printSatiety();
+            if (satyety== desiredSatiety){
+                return CatState.FEED;
+            }
+        }
+        return CatState.OVERFEED;
     }
      public static Food getFood(){
-         System.out.println("Введите название еды из списка");
-         String input = sn.nextLine().toUpperCase();
-         for (Food food : Food.values()) {
-             if(food.name().equals(input)){
-                 return food;
-             }
-         }
-         System.out.println("Вы ввели неверные данные!");
+         Food food = Food.values()[rn.nextInt(Food.values().length)];
+         System.out.println(food.name() + food.getFoodValue());
          return getFood();
      }
      public static void printFood(){
@@ -52,4 +51,17 @@
     public static void printDesiredSatiety() {
         System.out.println("Желаемый уровень сытости " + desiredSatiety);
     }
+    public static void printCatStete(CatState state){
+        switch (state){
+            case FEED:
+                System.out.println("Кот Сыт");
+                break;
+            case OVERFEED:
+                System.out.println("Кот перекормлен");
+                break;
+            case OBESE:
+                System.out.println("Коту пора сесть на диету");
+                break;
+        }
+    }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"506b889d-1c8c-4309-90c8-d910ff7b65ba\" name=\"Changes\" comment=\"Interfise init\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/LessenStart.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/LessenStart.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"Enum\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/Food.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n    <setting file=\"file://$PROJECT_DIR$/src/LessenStart.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2I8VZWlyMPTTGS5q0E2MKPA5bMh\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"LessenStart\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"LessenStart\" />\r\n      <module name=\"Lesson 10\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.LessenStart\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"506b889d-1c8c-4309-90c8-d910ff7b65ba\" name=\"Changes\" comment=\"\" />\r\n      <created>1669563255100</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1669563255100</updated>\r\n      <workItem from=\"1669563256890\" duration=\"652000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Random init\">\r\n      <created>1669567444785</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669567444785</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Interfise init\">\r\n      <created>1669570553163</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669570553163</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Random init\" />\r\n    <MESSAGE value=\"Interfise init\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Interfise init\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -1,7 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="506b889d-1c8c-4309-90c8-d910ff7b65ba" name="Changes" comment="Interfise init">
+    <list default="true" id="506b889d-1c8c-4309-90c8-d910ff7b65ba" name="Changes" comment="user interfeis final">
+      <change afterPath="$PROJECT_DIR$/src/CatState.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/LessenStart.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/LessenStart.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -65,6 +67,7 @@
       <option name="presentableId" value="Default" />
       <updated>1669563255100</updated>
       <workItem from="1669563256890" duration="652000" />
+      <workItem from="1670086233410" duration="3482000" />
     </task>
     <task id="LOCAL-00001" summary="Random init">
       <created>1669567444785</created>
@@ -80,7 +83,14 @@
       <option name="project" value="LOCAL" />
       <updated>1669570553163</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="user interfeis final">
+      <created>1669570998015</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1669570998015</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -100,6 +110,7 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Random init" />
     <MESSAGE value="Interfise init" />
-    <option name="LAST_COMMIT_MESSAGE" value="Interfise init" />
+    <MESSAGE value="user interfeis final" />
+    <option name="LAST_COMMIT_MESSAGE" value="user interfeis final" />
   </component>
 </project>
\ No newline at end of file
Index: src/CatState.java
===================================================================
diff --git a/src/CatState.java b/src/CatState.java
new file mode 100644
--- /dev/null	
+++ b/src/CatState.java	
@@ -0,0 +1,3 @@
+public enum CatState {
+    FEED, OVERFEED, OBESE
+}
